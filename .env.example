# .env.example
# RAG 系统环境变量模板
# 复制此文件为 .env 并填入实际值

# ============================================================================
# 应用配置
# ============================================================================

# 运行环境 (development, staging, production)
ENVIRONMENT=development

# 调试模式
DEBUG=true

# 应用版本
VERSION=0.1.0

# ============================================================================
# 数据库配置
# ============================================================================

# PostgreSQL 数据库连接
DATABASE_URL=postgres://rag_user:rag_password@localhost:5432/rag_development

# 数据库连接池配置
DB_MAX_CONNECTIONS=25
DB_MIN_CONNECTIONS=5

# ============================================================================
# 缓存配置
# ============================================================================

# Redis 连接
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_DB=0

# ============================================================================
# 向量数据库配置
# ============================================================================

# Qdrant 向量数据库
QDRANT_URL=http://localhost:6333
QDRANT_API_KEY=

# Elasticsearch (可选)
ELASTICSEARCH_URL=http://localhost:9200
ELASTICSEARCH_USERNAME=
ELASTICSEARCH_PASSWORD=

# ============================================================================
# RAG 引擎配置
# ============================================================================

# RAG 引擎 gRPC 地址
RAG_ENGINE_GRPC_URL=localhost:9090

# RAG 引擎 HTTP 地址
RAG_ENGINE_HTTP_URL=http://localhost:8080

# ============================================================================
# 对象存储配置
# ============================================================================

# 存储类型 (local, minio, aws)
STORAGE_TYPE=minio

# MinIO 配置
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin123
MINIO_BUCKET=rag-documents
MINIO_USE_SSL=false

# AWS S3 配置 (如果使用 AWS)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_S3_BUCKET=rag-documents

# ============================================================================
# 认证配置
# ============================================================================

# JWT 密钥 (生产环境请使用强密钥)
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production-please

# JWT 配置
JWT_ISSUER=rag-api
JWT_AUDIENCE=rag-users
JWT_ACCESS_TOKEN_TTL=24h
JWT_REFRESH_TOKEN_TTL=168h

# OAuth 配置 (可选)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
MICROSOFT_CLIENT_ID=
MICROSOFT_CLIENT_SECRET=

# ============================================================================
# LLM API 配置
# ============================================================================

# OpenAI API
OPENAI_API_KEY=
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MODEL=gpt-3.5-turbo

# Anthropic API
ANTHROPIC_API_KEY=
ANTHROPIC_MODEL=claude-3-sonnet-20240229

# Google Gemini API
GOOGLE_AI_API_KEY=
GOOGLE_AI_MODEL=gemini-pro

# Hugging Face API
HUGGINGFACE_API_KEY=
HUGGINGFACE_MODEL=sentence-transformers/all-MiniLM-L6-v2

# ============================================================================
# 监控配置
# ============================================================================

# Jaeger 分布式追踪
JAEGER_ENDPOINT=http://localhost:14268/api/traces
JAEGER_SERVICE_NAME=rag-api
JAEGER_SAMPLE_RATE=0.1

# Prometheus 指标
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=8002

# Sentry 错误监控 (可选)
SENTRY_DSN=
SENTRY_ENVIRONMENT=development

# ============================================================================
# 消息队列配置
# ============================================================================

# 队列类型 (redis, rabbitmq)
QUEUE_TYPE=redis

# RabbitMQ 配置 (如果使用)
RABBITMQ_URL=amqp://rag_user:rag_password@localhost:5672/
RABBITMQ_EXCHANGE=rag_exchange
RABBITMQ_QUEUE=rag_tasks

# ============================================================================
# 网络配置
# ============================================================================

# API 服务端口
API_PORT=8000
API_HOST=0.0.0.0

# Rust 引擎端口
RAG_ENGINE_HTTP_PORT=8080
RAG_ENGINE_GRPC_PORT=9090
RAG_ENGINE_WS_PORT=8081

# 前端端口
FRONTEND_PORT=3000

# ============================================================================
# 安全配置
# ============================================================================

# 加密密钥 (32 字节)
ENCRYPTION_KEY=your-32-byte-encryption-key-here!

# CORS 配置
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=*

# ============================================================================
# 开发环境配置
# ============================================================================

# Rust 日志级别
RUST_LOG=debug

# Go Gin 模式
GIN_MODE=debug

# 前端开发服务器
VITE_API_BASE_URL=http://localhost:8000
VITE_WS_URL=ws://localhost:8000
VITE_SENTRY_DSN=

# ============================================================================
# 性能配置
# ============================================================================

# 并发配置
WORKER_THREADS=4
EMBEDDING_CONCURRENCY=10
RETRIEVAL_CONCURRENCY=20
LLM_CONCURRENCY=5

# 缓存配置
MEMORY_CACHE_SIZE=1073741824  # 1GB
REDIS_POOL_SIZE=20

# 超时配置
REQUEST_TIMEOUT=30s
EMBEDDING_TIMEOUT=60s
LLM_TIMEOUT=120s

# ============================================================================
# 插件配置
# ============================================================================

# 插件目录
PLUGIN_DIR=./plugins

# WASM 插件配置
ENABLE_WASM_PLUGINS=true
WASM_MEMORY_LIMIT=67108864  # 64MB
WASM_EXECUTION_TIMEOUT=30s

# ============================================================================
# 邮件配置 (可选)
# ============================================================================

# SMTP 配置
SMTP_HOST=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@rag-system.com
SMTP_FROM_NAME=RAG System

# ============================================================================
# 第三方服务配置 (可选)
# ============================================================================

# 分析服务
GOOGLE_ANALYTICS_ID=
MIXPANEL_TOKEN=

# 支付服务 (如果需要)
STRIPE_PUBLIC_KEY=
STRIPE_SECRET_KEY=

# 地图服务 (如果需要)
GOOGLE_MAPS_API_KEY=

# ============================================================================
# 开发工具配置
# ============================================================================

# 热重载配置
HOT_RELOAD=true

# 代码生成配置
CODEGEN_ENABLED=true

# 测试配置
TEST_DATABASE_URL=postgres://rag_user:rag_password@localhost:5432/rag_test
TEST_REDIS_URL=redis://localhost:6379/1

# ============================================================================
# 生产环境特殊配置
# ============================================================================

# 生产环境下需要设置的变量 (开发时保持为空)

# 真实的 API 密钥 (生产环境)
PROD_OPENAI_API_KEY=
PROD_ANTHROPIC_API_KEY=

# 生产数据库 (生产环境)
PROD_DATABASE_URL=
PROD_REDIS_URL=

# SSL 证书 (生产环境)
SSL_CERT_PATH=
SSL_KEY_PATH=

# CDN 配置 (生产环境)
CDN_URL=
STATIC_ASSETS_URL=

# 备份配置 (生产环境)
BACKUP_S3_BUCKET=
BACKUP_S3_REGION=
BACKUP_SCHEDULE=0 2 * * *  # 每天凌晨2点备份