# RAG API 服务配置文件

app:
  name: "rag-api"
  version: "0.1.0"
  environment: "development"
  debug: true
  timezone: "UTC"

server:
  port: "8000"
  host: "0.0.0.0"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 60s
  shutdown_timeout: 10
  max_request_size: 16777216  # 16MB

  cors:
    allow_origins: ["*"]
    allow_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS", "PATCH"]
    allow_headers: ["*"]
    expose_headers: ["Content-Length", "Content-Type"]
    allow_credentials: true
    max_age: 86400  # 24 hours

  rate_limit:
    enabled: true
    requests_per_min: 1000
    burst_size: 100
    cleanup_window: 60s

database:
  host: "localhost"
  port: 5432
  username: "rag_user"
  password: "rag_password"
  database: "rag_development"
  ssl_mode: "disable"
  max_open_conns: 25
  max_idle_conns: 10
  conn_max_lifetime: 3600s  # 1 hour
  conn_max_idle_time: 600s  # 10 minutes

redis:
  host: "localhost"
  port: 6379
  password: ""
  database: 0
  pool_size: 20
  min_idle_conns: 5
  max_retries: 3
  dial_timeout: 5s
  read_timeout: 3s
  write_timeout: 3s
  idle_timeout: 300s

rag_engine:
  grpc_address: "localhost:9090"
  conn_timeout: 10s
  request_timeout: 30s
  max_retries: 3
  keep_alive: 30s
  tls:
    enabled: false
    cert_file: ""
    key_file: ""
    ca_file: ""
    server_name: ""

auth:
  jwt:
    secret_key: "your-super-secret-jwt-key-change-this-in-production"
    issuer: "rag-api"
    audience: "rag-users"
    access_token_ttl: 24h
    refresh_token_ttl: 168h  # 7 days
    algorithm: "HS256"

  oauth:
    google:
      enabled: false
      client_id: ""
      client_secret: ""
      redirect_url: "http://localhost:8000/auth/google/callback"
      scopes: ["openid", "profile", "email"]

    github:
      enabled: false
      client_id: ""
      client_secret: ""
      redirect_url: "http://localhost:8000/auth/github/callback"
      scopes: ["user:email"]

    microsoft:
      enabled: false
      client_id: ""
      client_secret: ""
      redirect_url: "http://localhost:8000/auth/microsoft/callback"
      scopes: ["openid", "profile", "email"]

  rbac:
    enabled: true
    cache_enabled: true
    cache_ttl: 300s  # 5 minutes
    default_role: "viewer"

  session:
    cookie_name: "rag_session"
    cookie_domain: ""
    cookie_path: "/"
    max_age: 86400s  # 24 hours
    secure: false
    http_only: true
    same_site: "lax"

storage:
  type: "minio"  # local, minio, aws

  local:
    base_path: "./uploads"
    max_size: 104857600  # 100MB
    url_prefix: "/files"

  minio:
    endpoint: "localhost:9000"
    access_key: "minioadmin"
    secret_key: "minioadmin123"
    bucket: "rag-documents"
    region: "us-east-1"
    use_ssl: false
    url_prefix: "/files"

  aws:
    region: "us-east-1"
    access_key: ""
    secret_key: ""
    bucket: "rag-documents"
    url_prefix: "/files"
    endpoint: ""

queue:
  type: "redis"  # redis, rabbitmq

  redis:
    key_prefix: "rag:queue:"
    max_retries: 3
    retry_delay: 30s
    visibility_timeout: 300s  # 5 minutes

  rabbitmq:
    url: "amqp://rag_user:rag_password@localhost:5672/"
    exchange: "rag_exchange"
    exchange_type: "topic"
    routing_key: "rag.tasks"
    queue_name: "rag_tasks"
    durable: true
    auto_delete: false
    exclusive: false
    no_wait: false
    prefetch_count: 10
    reconnect_delay: 5s

monitoring:
  metrics:
    enabled: true
    path: "/metrics"
    port: "8002"
    namespace: "rag_api"
    subsystem: "http"

  tracing:
    enabled: true
    service_name: "rag-api"
    jaeger_endpoint: "http://localhost:14268/api/traces"
    sample_rate: 0.1
    environment: "development"

  health:
    enabled: true
    path: "/health"
    interval: 30s
    timeout: 10s

  logging:
    level: "info"
    format: "json"  # json, text
    output: "stdout"  # stdout, file
    file_path: "./logs/app.log"
    max_size: 100  # MB
    max_age: 7     # days
    max_backups: 10
    compress: true

security:
  encryption:
    key: "your-32-byte-encryption-key-here!"
    algorithm: "AES-256-GCM"

  csp:
    enabled: true
    policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' ws: wss:; frame-ancestors 'none';"
    report_uri: "/api/v1/security/csp-report"

  hsts:
    enabled: false  # Set to true in production with HTTPS
    max_age: 31536000  # 1 year
    include_sub_domains: true
    preload: true

  x_frame_options: "DENY"
  x_content_type_options: true

  xss_protection:
    enabled: true
    mode: "block"
    report_uri: "/api/v1/security/xss-report"