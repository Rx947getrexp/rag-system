[package]
name = "rag-engine"
version = "0.1.0"
edition = "2024"
authors = ["RAG Team <team@rag.com>"]
description = "High-performance RAG engine written in Rust"
license = "MIT"
repository = "https://github.com/rx947getrexp/rag-system"

[[bin]]
name = "rag-engine-server"
path = "src/main.rs"

[lib]
name = "rag_engine"
path = "src/lib.rs"

[dependencies]
# 异步运行时
tokio = { version = "1.35", features = ["full"] }
tokio-util = "0.7"
async-trait = "0.1"
futures = "0.3"
futures-util = "0.3"  # 添加这个依赖

# Web 框架和网络
axum = { version = "0.7", features = ["multipart", "ws"] }  # 添加需要的 features
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace", "timeout", "compression-gzip"] }
hyper = "1.0"

# gRPC
tonic = "0.10"
tonic-reflection = "0.10"
prost = "0.12"

# 序列化
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
bincode = "1.3"

# 数据库和存储
sqlx = { version = "0.7", features = ["postgres", "runtime-tokio-native-tls", "chrono", "uuid"] }
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }  # 移除 optional
sea-orm = { version = "0.12", features = ["sqlx-postgres", "runtime-tokio-native-tls", "macros"] }  # 移除 optional

# HTTP 客户端
reqwest = { version = "0.11", features = ["json", "stream"] }

# 向量数据库客户端
qdrant-client = { version = "1.7" }  # 移除 optional

# 机器学习和嵌入
candle-core = { version = "0.9", default-features = false}  # 移除 optional
candle-nn = { version = "0.9", default-features = false}   # 移除 optional
candle-transformers = { version = "0.9", default-features = false}  # 移除 optional
tokenizers = "0.15"

hf-hub = "0.3"

# 文本处理
regex = "1.10"
unicode-segmentation = "1.10"
html2text = "0.4"

# 并发和同步
rayon = "1.8"
crossbeam = "0.8"
dashmap = "5.5"
parking_lot = "0.12"

# 随机数版本绑定
rand = "=0.8.5"
rand_distr = "=0.4.3"

# 错误处理
thiserror = "1.0"
anyhow = "1.0"
color-eyre = "0.6"

# 日志和追踪
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-opentelemetry = "0.22"
opentelemetry = "0.21"
opentelemetry-jaeger = "0.20"

# 指标
prometheus = "0.13"
metrics = "0.22"
metrics-exporter-prometheus = "0.13"

# 配置
config = "0.14"
figment = { version = "0.10", features = ["toml", "env"] }

# 时间和UUID
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.6", features = ["v4", "serde"] }

# 密码学
sha2 = "0.10"
blake3 = "1.5"

# 内存管理
bytes = "1.5"
smallvec = "1.11"

# 压缩
flate2 = "1.0"
zstd = "0.13"

# WASM 插件支持
wasmtime = { version = "24.0", optional = true }
wasmtime-wasi = { version = "15.0", optional = true }

# 文件处理
pdf-extract = "0.7"
lopdf = "0.32"
docx-rs = "0.4"

# 并行计算
ndarray = "0.15"
faer = "0.16"

# JSON处理
json = "0.12"

# Base64编码
base64 = "0.21"

# 数据验证
validator = { version = "0.16", features = ["derive"] }

# 限流和熔断
governor = "0.6"

# 健康检查
bb8 = "0.8"
clap = "4.5.41"
url = "2.5.4"
num_cpus = "1.17.0"
tokio-stream = "0.1.17"

[dev-dependencies]
tokio-test = "0.4"
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"
mockall = "0.12"

[build-dependencies]
tonic-build = "0.10"

[features]
default = ["local-embedding", "qdrant", "postgres", "redis-cache"]
local-embedding = []  # 现在这些都是默认启用的
qdrant = []
postgres = []
redis-cache = []
wasm-plugins = ["wasmtime", "wasmtime-wasi"]
full = ["local-embedding", "qdrant", "postgres", "redis-cache", "wasm-plugins"]

[profile.release]
codegen-units = 1
lto = true
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true

[profile.bench]
opt-level = 3
debug = false
lto = true